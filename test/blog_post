Beginning with #best_item_for_merchant(merchant_id), the way the function is executed is by taking in the argument of merchant_id and then utilizing a container array to house all of the invoices for the given merchant. Once you have the array of invoices from the given merchant, we utilized an ".each" variable to iterate through while placing all invoices into a new holder container called item_holder. From there we iterated through the item_holder array with another .each to pull out the individual items and their information such as quantity ordered. Once entering the ".each" iterator of item_holder, we have an if block to help the program designate which path to take. The conditions checked are to see if the placeholder array was empty or not, and if so then to automatically set the first price as the best price. If the array is not empty, then the second check in the if block is to see if the quantity values are equal and to then push the new equal quantity item to the most_sold array. Finally, if neither of those conditions are met then there's a check against the quantity of the previous high score kept in most_sold, if the new quantity is larger than it replaces the previous most_sold. Once all the conditions have been checked the method ultimately returns the most_sold variable.
